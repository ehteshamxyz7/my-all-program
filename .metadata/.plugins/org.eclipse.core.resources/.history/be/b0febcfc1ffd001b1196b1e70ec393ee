package com.api.book.services;

import java.util.ArrayList;

import java.util.List;
import java.util.stream.Collector;
import java.util.stream.Collectors;

import org.springframework.stereotype.Component;

import com.api.book.entities.Book;

@Component
public class BookServices {

	private static List<Book> list = new ArrayList<>();

	static {

		list.add(new Book(123, "java complete reference", "XYZ"));
		list.add(new Book(124, "java head first", "ABC"));
		list.add(new Book(125, "think in java", "LMN"));
		list.add(new Book(126, "effictive java", "HHD"));
		list.add(new Book(147, "java scripting programing", "BGP"));

	}

	// get all book
	public List<Book> getAllBook() {
		return list;
	}

	// getting single book byId
	Book book = null;

	public Book getBookById(int id) {
		try {
		book = list.stream().filter(e -> e.getId() == id).findFirst().get();
		}
		catch (Exception e) {
           e.printStackTrace();
		}
		return book;
	}

	// adding the book
	public Book addBook(Book b) {
		list.add(b);
		return b;
	}

	// delete book
	public void deleteBook(int bid) {
		list = list.stream().filter(book -> book.getId() != bid).collect(Collectors.toList());

	}

//update the book
	public void updateBook(Book book, int bookId) {

		list.stream().map(c -> {
			if (c.getId() == bookId) {
				c.setTitle(book.getTitle());
				c.setAuthor(book.getAuthor());

			}
			return c;
		}).collect(Collectors.toList());
	}

}
